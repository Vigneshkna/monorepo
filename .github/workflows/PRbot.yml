name: Bot scan
on:
  pull_request:
    types: [ opened, reopened ]
permissions:
  pull-requests: write

jobs:
  Botscanning:
    permissions: write-all
    name: Bot scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Snyk Bot scan
        continue-on-error: true
        run: |
         echo "----------Download Latest Snyk CLI-----------"
            curl -Lo ./snyk "https://github.com/snyk/snyk/releases/download/v1.1200.0/snyk-linux"
            chmod +x snyk
            ls -lrt
            echo "----------Authenticating Snyk-----------"
            ./snyk auth ${{secrets.SNYK_TOKEN}}
            #  npm i -g snyk@latest
            #  npm install --legacy-peer-deps
            #  echo "----------Authenticating Snyk-----------"
            #  snyk auth ${{ secrets.SNYK_TOKEN }}
             echo "----------Snyk Scanning-----------"
             ./snyk test --all-projects -d --skip-unresolved
      - name: TruffleHog Bot scan
        continue-on-error: true
        run: |
          curl -q "https://storage.googleapis.com/thog-releases/trufflehog-scanner/latest/fetch.sh" | bash
          ./trufflehog --fail-verified git ${{ github.event.repository.default_branch }} HEAD
  BotCheck:
    permissions: write-all
    runs-on: ubuntu-latest
    needs: [ Botscanning ]
    steps:
      - uses: Vigneshkna/pr-scan-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}